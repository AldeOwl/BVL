"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function reqListener() {
  var data = JSON.parse(this.responseText);
  console.log(data);
}

function reqError(err) {
  console.log('Fetch Error :-S', err);
}

var oReq = new XMLHttpRequest();
oReq.onload = reqListener;
oReq.onerror = reqError;
oReq.open('get', 'http://myvolley.ru/api/tournament?request=teams&id=397', true);
oReq.send();
var feed = new Instafeed({
  get: 'user',
  userId: '212406086',
  accessToken: '212406086.b242790.ad724d1a02ee43ca812e5ace3850f277'
});
feed.run();

(function () {
  var mainMenu = document.querySelectorAll('.menu__item');
  var sections = document.querySelectorAll('.main');

  function onMenu() {
    mainMenu.forEach(function (item) {
      item.classList.remove('menu__item-active');
    });
    sections.forEach(function (item) {
      item.classList.remove('main-active');
    });
    this.classList.add('menu__item-active');
    var menuId = this.getAttribute('data-menu');
    sections.forEach(function (item) {
      if (item.getAttribute('data-section') == menuId) item.classList.add('main-active');
    });
  }

  mainMenu.forEach(function (item) {
    item.addEventListener('click', onMenu);
  });
})();

(function () {
  fetch("http://myvolley.ru/api/tournament?request=news&id=397").then(function (res) {
    return res.json();
  }).then(function (json) {
    console.log(json); // allTeams = json;
    // const formatedResult = [];
    // json[0].map(item => {
    //     const {
    //         teamName,
    //         teamId
    //     }= item;
    //     formatedResult.push({
    //         teamName,
    //         teamId
    //     });
    // });
    // return formatedResult;
  });
})();

var Render =
/*#__PURE__*/
function () {
  function Render() {
    _classCallCheck(this, Render);

    this.teamList = document.querySelector('.teams__item');
  }

  _createClass(Render, [{
    key: "drowTeamList",
    value: function drowTeamList() {}
  }]);

  return Render;
}();

(function () {
  var select = document.querySelector('.teams-select');
  var list = document.querySelector('.teams-list');
  var icon = document.querySelector('.teams-select__item');
  var teamList = document.querySelector('.list-view');
  var selectImg = document.querySelector('#targetImg');
  var selectName = document.querySelector('#targetName');
  var infoMenu = document.querySelectorAll('.info-menu__item');
  var teamSection = document.querySelectorAll('.team-section');
  var playersList = document.querySelector('.players-list');
  var allTeams = 0;

  function showTeamList() {
    list.classList.toggle('teams-list-active');
    icon.classList.toggle('teams-select__item-active');
  }

  function renderTeamList(teamName, teamId) {
    var li = document.createElement('li');
    li.classList.add('list-view__item');
    var wrap = document.createElement('div');
    wrap.classList.add('teams__link'); // let img = document.createElement('img');
    // img.classList.add('teams__link-img');
    // img.setAttribute('href', '#');

    var name = document.createElement('h3');
    name.classList.add('teams__link-title');
    name.setAttribute('data-id', teamId);
    name.addEventListener('click', function () {
      console.log(event.target.innerHTML);
      selectName.innerHTML = event.target.innerHTML;
      var id = event.target.getAttribute('data-id');
      selectName.setAttribute('data-id', id);
      removePlayerCard();
      showPlayers();
    });
    name.innerHTML = teamName; // wrap.appendChild(img);

    wrap.appendChild(name);
    li.appendChild(wrap);
    teamList.appendChild(li);
  }

  function cat(str) {
    return str.split(' ');
  }

  function renderPlayerCard(name, birthday, height, number, photo) {
    var card = document.createElement('div');
    card.classList.add('player-card');
    var img = document.createElement('img');
    img.classList.add('player-card__img');
    img.setAttribute('src', photo);
    var cardInfo = document.createElement('div');
    cardInfo.classList.add('player-card__info');
    var title = document.createElement('div');
    title.classList.add('card-title');
    var num = document.createElement('p');
    num.classList.add('card-info__number');
    num.innerHTML = number;
    var playerName = document.createElement('h3');
    playerName.classList.add('card-info__name');
    playerName.innerHTML = "".concat(name[0], " ").concat(name[1]);
    var birth = document.createElement('p');
    birth.classList.add('card-info__birth');
    birth.innerHTML = "<span>\u0414\u0430\u0442\u0430 \u0440\u043E\u0436\u0434\u0435\u043D\u0438\u044F: </span> ".concat(birthday);
    var playerHeight = document.createElement('p');
    playerHeight.classList.add('card-info__height');
    playerHeight.innerHTML = "<span>\u0420\u043E\u0441\u0442: </span> ".concat(height);
    var btn = document.createElement('div');
    btn.classList.add('card-info__profile');
    btn.innerHTML = 'подробнее...';
    title.appendChild(num);
    title.appendChild(playerName);
    cardInfo.appendChild(title);
    cardInfo.appendChild(birth);
    cardInfo.appendChild(playerHeight);
    cardInfo.appendChild(btn);
    card.appendChild(img);
    card.appendChild(cardInfo);
    playersList.appendChild(card);
  }

  function removePlayerCard() {
    while (playersList.firstChild) {
      playersList.removeChild(playersList.firstChild);
    }
  }

  function showPlayers() {
    var id = selectName.getAttribute('data-id');
    allTeams[0].forEach(function (item) {
      if (item.teamId == id) {
        item.players.forEach(function (item) {
          renderPlayerCard(cat(item.playerName), item.birthday, item.height, item.number, item.photo);
        });
      }
    });
  }

  function chooseSection() {
    infoMenu.forEach(function (item) {
      item.classList.remove('info-menu__item-active');
    });
    teamSection.forEach(function (item) {
      item.classList.remove('team-section-active');
    });
    this.classList.add('info-menu__item-active');
    var name = this.getAttribute('data-name');
    teamSection.forEach(function (item) {
      if (item.getAttribute('data-name') === name) {
        item.classList.add('team-section-active');
      }
    });
  }

  infoMenu.forEach(function (item) {
    item.addEventListener('click', chooseSection);
  });
  select.addEventListener('click', showTeamList);
  fetch("http://myvolley.ru/api/tournament?request=teams&id=384").then(function (res) {
    return res.json();
  }).then(function (json) {
    console.log(json);
    allTeams = json;
    var formatedResult = [];
    json[0].map(function (item) {
      var teamName = item.teamName,
          teamId = item.teamId;
      formatedResult.push({
        teamName: teamName,
        teamId: teamId
      });
    });
    return formatedResult;
  }).then(function (result) {
    result.forEach(function (item) {
      renderTeamList(item.teamName, item.teamId);
    });
  });
})();

var teams = {
  rus: {
    title: 'Russia',
    flag: 'images/rus.jpg'
  }
};
var country = document.querySelector('.teams__link-title');
var flag = document.querySelector('.teams__link-img');
country.innerHTML = teams.rus.title;
flag.setAttribute('src', teams.rus.flag);
var menu = document.querySelectorAll('.pools-menu__item');
var pools = document.querySelectorAll('.pools-list__item');

function choosePool() {
  menu.forEach(function (item) {
    item.classList.remove('pools-menu__item-active');
  });
  pools.forEach(function (item) {
    item.classList.remove('pools-list__item-active');
  });
  this.classList.add('pools-menu__item-active');
  var group = this.getAttribute('data-group');
  pools.forEach(function (item) {
    if (item.getAttribute('data-group') === group) {
      item.classList.add('pools-list__item-active');
    }
  });
}

menu.forEach(function (item) {
  item.addEventListener('click', choosePool);
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
